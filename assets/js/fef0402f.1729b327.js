"use strict";(self.webpackChunkknowledgebase=self.webpackChunkknowledgebase||[]).push([[1541],{20716:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=t(85893),r=t(11151);const i={title:"Mockups",aliases:["Stub","Dummy","Fake"],tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},s="Mockups",c={id:"main/CleanCode/CleanCodeDeveloper/Praktiken/Mockups",title:"Mockups",description:"Warum?",source:"@site/docs/main/CleanCode/1. CleanCodeDeveloper/Praktiken/Mockups.md",sourceDirName:"main/CleanCode/1. CleanCodeDeveloper/Praktiken",slug:"/main/CleanCode/CleanCodeDeveloper/Praktiken/Mockups",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Mockups",draft:!1,unlisted:!1,tags:[{label:"cleancode",permalink:"/docs/tags/cleancode"},{label:"cleancode/ccd",permalink:"/docs/tags/cleancode-ccd"},{label:"cleancode/ccd/practic",permalink:"/docs/tags/cleancode-ccd-practic"}],version:"current",frontMatter:{title:"Mockups",aliases:["Stub","Dummy","Fake"],tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},sidebar:"cs",previous:{title:"Liskov Substitution Principle",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Liskov Substitution Principle"},next:{title:"Partizipation in Professional Events",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Partizipation in Professional Events"}},a={},l=[];function d(e){const n={a:"a",blockquote:"blockquote",em:"em",h1:"h1",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"mockups",children:"Mockups"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Warum?"}),"\nOhne Attrappen keine einfach kontrollierbaren Tests."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["In der Regel verwenden Komponenten andere Komponenten. Will man eine Komponente isoliert testen, m\xfcssen diese Abh\xe4ngigkeiten abgetrennt werden. Dabei interessiert uns nun ausschlie\xdflich die Funktionalit\xe4t der zu testenden Komponente (",(0,o.jsx)(n.em,{children:"System Under Test (SUT)"}),"). Und es interessiert uns, wie die Komponente mit den anderen interagiert."]}),"\n",(0,o.jsx)(n.p,{children:"Beim Isolieren verwenden wir sogenannte Mockups. Diese werden anstelle der echten Komponenten verwendet. So interagiert das System Under Test w\xe4hrend der Tests mit gut kontrollierbaren Attrappen statt mit realen Komponenten."}),"\n",(0,o.jsxs)(n.p,{children:["Die Literatur kennt noch andere Bezeichnungen f\xfcr Attrappen wie\xa0",(0,o.jsx)(n.em,{children:"Stub"}),",\xa0",(0,o.jsx)(n.em,{children:"Dummy"}),"\xa0oder\xa0",(0,o.jsx)(n.em,{children:"Fake"}),", die teilweise synonym zu Mockup benutzt werden, aber durchaus f\xfcr\xa0",(0,o.jsx)(n.a,{href:"http://martinfowler.com/articles/mocksArentStubs.html",children:"unterschiedliche Funktionsweisen"}),"\xa0stehen. Bevor man ein Mock Framework wie z.B.\xa0",(0,o.jsx)(n.a,{href:"https://hibernatingrhinos.com/oss/rhino-mocks",children:"Rhino Mocks"}),"\xa0verwendet, sollte man ein Mockup zun\xe4chst \u201eper Hand\u201c implementieren. Dies hilft, den Mechanismus zu verstehen."]}),"\n",(0,o.jsxs)(n.p,{children:["Siehe auch unter\xa0",(0,o.jsx)(n.a,{href:"https://clean-code-developer.de/weitere-infos/werkzeuge/",children:"Tools"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var o=t(67294);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);