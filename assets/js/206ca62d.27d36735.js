"use strict";(self.webpackChunkknowledgebase=self.webpackChunkknowledgebase||[]).push([[947],{19741:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(85893),a=t(11151);const o={title:"Incremental Development",aliases:null,tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},c="Incremental Development",l={id:"main/CleanCode/CleanCodeDeveloper/Praktiken/Incremental Development",title:"Incremental Development",description:"Warum?",source:"@site/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Incremental Development.md",sourceDirName:"main/CleanCode/CleanCodeDeveloper/Praktiken",slug:"/main/CleanCode/CleanCodeDeveloper/Praktiken/Incremental Development",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Incremental Development",draft:!1,unlisted:!1,tags:[{label:"cleancode",permalink:"/docs/tags/cleancode"},{label:"cleancode/ccd",permalink:"/docs/tags/cleancode-ccd"},{label:"cleancode/ccd/practic",permalink:"/docs/tags/cleancode-ccd-practic"}],version:"current",frontMatter:{title:"Incremental Development",aliases:null,tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},sidebar:"cs",previous:{title:"Error Measurement",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Error Measurement"},next:{title:"Inversion of Control Container",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Inversion of Control Container"}},i={},s=[];function d(e){const n={a:"a",blockquote:"blockquote",h1:"h1",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"incremental-development",children:"Incremental Development"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Warum?"}),"\nNur die Arbeit in Inkrementen erm\xf6glicht es dem Product Owner, Feedback zu geben."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ein Inkrement stellt einen vertikalen Schnitt durch die verschiedenen Aspekte eines Softwaresystems dar. Somit ist ein Inkrement ein St\xfcck ausf\xfchrbare Software. Das Inkrement kann einem ",(0,r.jsx)(n.a,{href:"Product%20Owner",children:"Product Owner"})," auf einer Testmaschine zur Verf\xfcgung gestellt werden, um Feedback einzuholen."]}),"\n",(0,r.jsx)(n.p,{children:"Regelm\xe4\xdfiges Feedback in kurzen Abst\xe4nden, jeweils am Ende einer Iteration, ist die Definition von Agilit\xe4t."}),"\n",(0,r.jsxs)(n.p,{children:["Wird dagegen horizontal statt vertikal vorgegangen, entstehen Module, die nicht eigenst\xe4ndig ausf\xfchrbar sind. Zu solchen Modulen kann ein ",(0,r.jsx)(n.a,{href:"Product%20Owner",children:"Product Owner"})," kein Feedback geben. Somit ist kein echtes agiles Vorgehen m\xf6glich."]})]})}function m(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>c});var r=t(67294);const a={},o=r.createContext(a);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);