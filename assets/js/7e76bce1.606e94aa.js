"use strict";(self.webpackChunkknowledgebase=self.webpackChunkknowledgebase||[]).push([[9615],{21784:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var r=i(85893),s=i(11151);const a={title:"Code Reviews",aliases:null,tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},d="Code Reviews",t={id:"main/CleanCode/CleanCodeDeveloper/Praktiken/Code Reviews",title:"Code Reviews",description:"Warum?",source:"@site/docs/main/CleanCode/1. CleanCodeDeveloper/Praktiken/Code Reviews.md",sourceDirName:"main/CleanCode/1. CleanCodeDeveloper/Praktiken",slug:"/main/CleanCode/CleanCodeDeveloper/Praktiken/Code Reviews",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Code Reviews",draft:!1,unlisted:!1,tags:[{label:"cleancode",permalink:"/docs/tags/cleancode"},{label:"cleancode/ccd",permalink:"/docs/tags/cleancode-ccd"},{label:"cleancode/ccd/practic",permalink:"/docs/tags/cleancode-ccd-practic"}],version:"current",frontMatter:{title:"Code Reviews",aliases:null,tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},sidebar:"cs",previous:{title:"Code Coverage Analysis",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Code Coverage Analysis"},next:{title:"Complex Refactorings",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Complex Refactorings"}},o={},c=[];function l(e){const n={a:"a",blockquote:"blockquote",h1:"h1",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"code-reviews",children:"Code Reviews"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Warum?"}),"\nVier Augen sehen mehr als zwei. Wenn der eine Entwickler dem anderen seinen Code erkl\xe4rt, tauchen meist Details auf, die bislang nicht bedacht wurden."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Reviews kommen vereinfacht in zwei Spielarten daher: als kontinuierlicher Prozess beim ",(0,r.jsx)(n.a,{href:"Pair%20Programming",children:"Pair Programming"}),", als eigenst\xe4ndiger Prozessschritt beim Code Review. Das Ziel ist in beiden F\xe4llen das gleiche: der Code soll von einem zweiten Entwickler begutachtet werden. Dies beugt der \u201eBetriebsblindheit\u201c vor. Schon die Tatsache dass ein Entwickler seinen Code einem anderen Entwickler vorstellt und beschreibt, f\xfchrt zu Aha Erlebnissen."]}),"\n",(0,r.jsx)(n.p,{children:"In der Regel wird erst durch die Diskussion mit anderen Entwicklern deutlich, wo die St\xe4rken und Schw\xe4chen einer Codebasis liegen. Gerade der Prozess der st\xe4ndigen Verbesserung bedingt es, sich mit der Sichtweise anderer Entwickler auseinander zu setzen."}),"\n",(0,r.jsxs)(n.p,{children:["Selbstverst\xe4ndlich ist nicht nur der Quellcode eine geeignete Basis f\xfcr Reviews. Sie bieten eine g\xfcnstige M\xf6glichkeit, die Ergebnisse jeder Entwicklungst\xe4tigkeit zu \xfcberpr\xfcfen, sofern sie in einem \u201elesbaren\u201c Ergebnis m\xfcnden. Neben rein informellen Reviews, wie dem ",(0,r.jsx)(n.a,{href:"Pair%20Programming",children:"Pair Programming"})," oder der Begutachtung durch eine zweite Person gibt es auch das formale Review mit einem Reviewprozess sowie entsprechenden Rollen. Weitere bekannte Arten des Review sind z.B. ",(0,r.jsx)(n.a,{href:"Walkthrough",children:"Walkthrough"}),", ",(0,r.jsx)(n.a,{href:"Technisches%20Review",children:"Technisches Review"}),", ",(0,r.jsx)(n.a,{href:"Peer%20Review",children:"Peer Review"})," und ",(0,r.jsx)(n.a,{href:"Inspektion",children:"Inspektion"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Reviews erg\xe4nzen dynamische Tests, wie z.B. den automatischen ",(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Unit%20Test",children:"Unit Test"})," oder den automatischen Integrationstest aus dem\xa0",(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Grade/Gelber%20Grad",children:"Gelben Grad"}),"\xa0bzw.\xa0",(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Grade/Orangener%20Grad",children:"Orangenen Grad"})," Im Gegensatz zu diesen Tests, sind Reviews auch sehr gut geeignet, Fehler in den Anforderungen zu finden. Auch k\xf6nnen sie bereits sehr fr\xfch im Entwicklungsprozess eingesetzt und Fehler dadurch auch sehr fr\xfch gefunden werden. Und um so fr\xfcher Fehler gefunden werden, um so g\xfcnstiger ist auch deren Beseitigung."]}),"\n",(0,r.jsxs)(n.p,{children:["An den orangen Grad schlie\xdft sich der\xa0",(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Grade/Gelber%20Grad",children:"Gelbe Grad"})," an."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>t,a:()=>d});var r=i(67294);const s={},a=r.createContext(s);function d(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);