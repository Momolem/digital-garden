"use strict";(self.webpackChunkknowledgebase=self.webpackChunkknowledgebase||[]).push([[715],{78677:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var i=s(85893),r=s(11151);const t={title:"Design Patterns",aliases:["Entwurfsmuster"],tags:["cleancode/designpatterns","cleancode/refactoring"]},a="Design Patterns",l={id:"main/CleanCode/DesignPatterns/DesignPatterns",title:"Design Patterns",description:"Design patterns\xa0are typical solutions to commonly occurring problems in software design. They are like pre-made blueprints that you can customize to solve a recurring design problem in your code",source:"@site/docs/main/CleanCode/0. DesignPatterns/0. DesignPatterns.md",sourceDirName:"main/CleanCode/0. DesignPatterns",slug:"/main/CleanCode/DesignPatterns/",permalink:"/docs/main/CleanCode/DesignPatterns/",draft:!1,unlisted:!1,tags:[{label:"cleancode/designpatterns",permalink:"/docs/tags/cleancode-designpatterns"},{label:"cleancode/refactoring",permalink:"/docs/tags/cleancode-refactoring"}],version:"current",sidebarPosition:0,frontMatter:{title:"Design Patterns",aliases:["Entwurfsmuster"],tags:["cleancode/designpatterns","cleancode/refactoring"]},sidebar:"cs",previous:{title:"Clean Code",permalink:"/docs/main/CleanCode/"},next:{title:"Abstract Factory",permalink:"/docs/main/CleanCode/DesignPatterns/Abstract Factory"}},o={},c=[{value:"Creational",id:"creational",level:2},{value:"Structural",id:"structural",level:2},{value:"Behavioral",id:"behavioral",level:2},{value:"Source",id:"source",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"design-patterns",children:"Design Patterns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Design patterns"}),"\xa0are typical solutions to commonly occurring problems in software design. They are like pre-made blueprints that you can customize to solve a recurring design problem in your code"]}),"\n",(0,i.jsx)(n.h2,{id:"creational",children:"Creational"}),"\n",(0,i.jsx)(n.p,{children:"These patterns provide various object creation mechanisms, which increase flexibility and reuse of existing code."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Factory",children:"Factory"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Abstract%20Factory",children:"Abstract Factory"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Builder",children:"Builder"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Prototype",children:"Prototype"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Singleton",children:"Singleton"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"structural",children:"Structural"}),"\n",(0,i.jsx)(n.p,{children:"These patterns explain how to assemble objects and classes into larger structures while keeping these structures flexible and efficient."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Adapter",children:"Adapter"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Bridge",children:"Bridge"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Composite",children:"Composite"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Decorator",children:"Decorator"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Facade",children:"Facade"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Flyweight",children:"Flyweight"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Proxy",children:"Proxy"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"behavioral",children:"Behavioral"}),"\n",(0,i.jsx)(n.p,{children:"These patterns are concerned with algorithms and the assignment of responsibilities between objects."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Chain%20of%20Responsibility",children:"Chain of Responsibility"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Command",children:"Command"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Iterator",children:"Iterator"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Mediator",children:"Mediator"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Memento",children:"Memento"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Observer",children:"Observer"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/State",children:"State"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Strategy",children:"Strategy"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Template%20Method",children:"Template Method"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/DesignPatterns/Visitor",children:"Visitor"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"source",children:"Source"}),"\n",(0,i.jsxs)(n.p,{children:["The initial Version of the listed Design Pattern pages will be a copy of ",(0,i.jsx)(n.a,{href:"https://refactoring.guru/design-patterns",children:"Refactoring Guru"})]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>a});var i=s(67294);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);