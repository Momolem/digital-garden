"use strict";(self.webpackChunkknowledgebase=self.webpackChunkknowledgebase||[]).push([[1459],{7421:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var t=r(85893),o=r(11151);const i={title:"Continuous Delivery",aliases:["CD"],tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},a="Continuous Delivery",s={id:"main/CleanCode/CleanCodeDeveloper/Praktiken/Continuous Delivery",title:"Continuous Delivery",description:"Warum?",source:"@site/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Continuous Delivery.md",sourceDirName:"main/CleanCode/CleanCodeDeveloper/Praktiken",slug:"/main/CleanCode/CleanCodeDeveloper/Praktiken/Continuous Delivery",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Continuous Delivery",draft:!1,unlisted:!1,tags:[{label:"cleancode",permalink:"/docs/tags/cleancode"},{label:"cleancode/ccd",permalink:"/docs/tags/cleancode-ccd"},{label:"cleancode/ccd/practic",permalink:"/docs/tags/cleancode-ccd-practic"}],version:"current",frontMatter:{title:"Continuous Delivery",aliases:["CD"],tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},sidebar:"cs",previous:{title:"Component Orientation",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Component Orientation"},next:{title:"Continuous Integration",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Continuous Integration"}},d={},l=[];function c(e){const n={a:"a",blockquote:"blockquote",h1:"h1",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"continuous-delivery",children:"Continuous Delivery"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Warum?"}),"\nAls ",(0,t.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper",children:"CleanCodeDeveloper"})," m\xf6chte ich sicher sein, dass ein Setup das Produkt korrekt installiert. Wenn ich das erst beim Kunden herausfinde, ist es zu sp\xe4t."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Im\xa0",(0,t.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Grade/Gr%C3%BCner%20Grad",children:"gr\xfcnen Grad"}),"\xa0haben wir den ",(0,t.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Continuous%20Integration",children:"Continuous Integration"})," Prozess f\xfcr Build und Test aufgesetzt. Damit sorgt der ",(0,t.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Continuous%20Integration",children:"Continuous Integration"})," Prozess daf\xfcr, dass Fehler w\xe4hrend der Build- und Testphase schnell entdeckt werden. Wenn z.B. eine \xc4nderung am Code dazu f\xfchrt, dass eine andere Komponente nicht mehr \xfcbersetzt werden kann, weist der ",(0,t.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Continuous%20Integration",children:"Continuous Integration"})," Prozess kurze Zeit nach dem Commit der \xc4nderung auf den Fehler hin. Wenn am Ende jedoch ein Setup Programm produziert wird, welches sich aufgrund von Fehlern nicht installieren l\xe4sst, haben wir unser Ziel trotzdem nicht erreicht: funktionierende Software die bei unseren Kunden installiert werden kann."]}),"\n",(0,t.jsx)(n.p,{children:"Folglich m\xfcssen wir auch die Phasen Setup und Deployment automatisieren, um sie per Knopfdruck ausf\xfchren zu k\xf6nnen. Nur so k\xf6nnen wir sicher sein, dass wir installierbare Software produzieren. Und durch die Automatisierung ist sichergestellt, dass niemand einen wichtigen Schritt, der \u201ezu Fu\xdf\u201c ausgef\xfchrt werden muss, vergisst. So kann jeder im Team zu jedem Zeitpunkt den aktuellen Stand des Produktes installationsfertig produzieren und installieren."}),"\n",(0,t.jsxs)(n.p,{children:["Siehe auch unter\xa0",(0,t.jsx)(n.a,{href:"https://clean-code-developer.de/weitere-infos/werkzeuge/",children:"Tools"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>s,a:()=>a});var t=r(67294);const o={},i=t.createContext(o);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);