"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1169],{4137:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return t?r.createElement(f,o(o({ref:n},d),{},{components:t})):r.createElement(f,o({ref:n},d))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2072:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(4137));const i={title:"Statical Code Analysis",aliases:null,tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},o="Statical Code Analysis",l={unversionedId:"main/CleanCode/CleanCodeDeveloper/Praktiken/Statical Code Analysis",id:"main/CleanCode/CleanCodeDeveloper/Praktiken/Statical Code Analysis",title:"Statical Code Analysis",description:"Warum?",source:"@site/docs/main/CleanCode/1. CleanCodeDeveloper/Praktiken/Statical Code Analysis.md",sourceDirName:"main/CleanCode/1. CleanCodeDeveloper/Praktiken",slug:"/main/CleanCode/CleanCodeDeveloper/Praktiken/Statical Code Analysis",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Statical Code Analysis",draft:!1,tags:[{label:"cleancode",permalink:"/docs/tags/cleancode"},{label:"cleancode/ccd",permalink:"/docs/tags/cleancode-ccd"},{label:"cleancode/ccd/practic",permalink:"/docs/tags/cleancode-ccd-practic"}],version:"current",frontMatter:{title:"Statical Code Analysis",aliases:null,tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},sidebar:"main",previous:{title:"Simple Refactorings",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Simple Refactorings"},next:{title:"Test First",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Test First"}},s={},c=[],d={toc:c},u="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"statical-code-analysis"},"Statical Code Analysis"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Warum?"),"\nVertrauen ist gut, Kontrolle ist besser \u2013 und je automatischer, desto leichter ist sie.")),(0,a.kt)("p",null,"Wie definiert sich eigentlich die Qualit\xe4t einer Codeeinheit, z.B. einer Klasse oder Komponente? Reicht es, dass sie funktional die Anforderungen des Kunden erf\xfcllt? Reicht es, dass er schnell genug und skalierbar genug ist? Automatische Tests und schlie\xdflich Tests durch den Kunden geben dar\xfcber ja Auskunft. Ohne solche Anforderungskonformit\xe4t hat Software nat\xfcrlich keine relevante Qualit\xe4t. Wenn sie dem Kunden nicht n\xfctzt, er\xfcbrigt sich jede weitere Frage."),(0,a.kt)("p",null,"Auf der anderen Seite reicht es, entgegen immer noch weit verbreiteter Annahme, allerdings auch nicht, anforderungskonform zu sein. Hohe Qualit\xe4t ergibt sich nicht allein aus Funktionalit\xe4t und z.B. Performance. Denn neben den funktionalen und nicht funktionalen Anforderungen gibt es auch noch eine meist unausgesprochene verborgene Anforderung: Kunden wollen auch immer, dass Software nicht nur heute ihre Anforderungen erf\xfcllt, sondern auch noch morgen und \xfcbermorgen. Kunden wollen Investitionsschutz durch Wandelbarkeit."),(0,a.kt)("p",null,"F\xfcr Kunden ist diese Anforderung meist implizit. Sie glauben, es sei selbstverst\xe4ndlich, dass ein immaterielles Produkt wie Software sich quasi unendlich und auf Knopfdruck an neue Anforderungen anpassen lie\xdfe. Auch F\xfchrungskr\xe4fte, die nicht aus der Softwareentwicklung stammen, glauben das oft. Und sogar Softwareentwickler selbst!"),(0,a.kt)("p",null,"Gr\xf6\xdfer k\xf6nnte das Missverst\xe4ndnis \xfcber Software jedoch kaum sein. Wandelbarkeit ist weder selbstverst\xe4ndlich im Sinne eines von jedem Softwareentwickler ohnehin verfolgten Zieles, noch ergibt sie sich durch irgendetwas quasi von selbst. Wandelbarkeit ist vielmehr harte Arbeit und muss st\xe4ndig gegen andere Werte abgewogen werden."),(0,a.kt)("p",null,"Wenn sonstige Anforderungskonformit\xe4t sich nun durch (automatisierte) Tests feststellen l\xe4sst, wie steht es dann mit der Wandelbarkeit? L\xe4sst sich die Qualit\xe4t von Code im Hinblick auf seine (\xdcber)Lebensf\xe4higkeit auch automatisch messen? Zum Teil. Nicht alle Aspekte, die Software evolvierbar machen, sind automatisch pr\xfcfbar. Ob zum Beispiel Software offen f\xfcr Erweiterungen durch ein Add-In-Konzept gehalten wird, ist nicht automatisiert erkennbar."),(0,a.kt)("p",null,"Dennoch gibt es\xa0",(0,a.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Software_metric"},"Metriken"),", deren Wert f\xfcr eine Software sich \u201eausrechnen\u201c l\xe4sst.\xa0",(0,a.kt)("a",{parentName:"p",href:"https://clean-code-developer.de/weitere-infos/werkzeuge/"},"Tools"),"\xa0helfen dabei. Diese Tools sollten daher in jedem Softwareprojekt zum Einsatz kommen."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"F\xfcr ",(0,a.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Legacy%20Code"},"Legacy Code")," k\xf6nnen die Tools den Status Quo erheben und somit eine Grundlinie definieren, mit der die weitere Entwicklung des Codes (zum Besseren) verglichen werden kann."),(0,a.kt)("li",{parentName:"ul"},"F\xfcr neuen Code, der mit Wandelbarkeit im Blick geplant wurde, zeigt solch statische Codeanalyse, ob er das Ideal der Planung erf\xfcllt.")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/main/CleanCode/CleanCodeDeveloper/CleanCodeDeveloper"},"CCD")," sind nicht damit zufrieden, Code nur automatisiert zu testen. Sie haben auch immer ein Auge auf seine Wandelbarkeit, denn sie wissen, dass Kunden daran genauso interessiert sind \u2013 egal, ob sie es explizit gesagt haben oder nicht."),(0,a.kt)("p",null,"Siehe auch unter\xa0",(0,a.kt)("a",{parentName:"p",href:"https://clean-code-developer.de/weitere-infos/werkzeuge/"},"Tools"),"."))}p.isMDXComponent=!0}}]);