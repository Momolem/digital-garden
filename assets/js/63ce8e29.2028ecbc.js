"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3693],{4137:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>u});var a=r(7294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var d=a.createContext({}),p=function(e){var n=a.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=p(e.components);return a.createElement(d.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},C=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(r),C=t,u=s["".concat(d,".").concat(C)]||s[C]||m[C]||i;return r?a.createElement(u,l(l({ref:n},c),{},{components:r})):a.createElement(u,l({ref:n},c))}));function u(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,l=new Array(i);l[0]=C;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[s]="string"==typeof e?e:t,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}C.displayName="MDXCreateElement"},723:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=r(7462),t=(r(7294),r(4137));const i={title:"Gelber Grad",aliases:["Yellow Grade"],tags:["cleancode","cleancode/ccd"]},l="Gelber Grad",o={unversionedId:"main/CleanCode/CleanCodeDeveloper/Grade/Gelber Grad",id:"main/CleanCode/CleanCodeDeveloper/Grade/Gelber Grad",title:"Gelber Grad",description:"Prinzipien",source:"@site/docs/main/CleanCode/1. CleanCodeDeveloper/Grade/2. Gelber Grad.md",sourceDirName:"main/CleanCode/1. CleanCodeDeveloper/Grade",slug:"/main/CleanCode/CleanCodeDeveloper/Grade/Gelber Grad",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Grade/Gelber Grad",draft:!1,tags:[{label:"cleancode",permalink:"/docs/tags/cleancode"},{label:"cleancode/ccd",permalink:"/docs/tags/cleancode-ccd"}],version:"current",sidebarPosition:2,frontMatter:{title:"Gelber Grad",aliases:["Yellow Grade"],tags:["cleancode","cleancode/ccd"]},sidebar:"main",previous:{title:"Orangener Grad",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Grade/Orangener Grad"},next:{title:"Gr\xfcner Grad",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Grade/Gr\xfcner Grad"}},d={},p=[{value:"Prinzipien",id:"prinzipien",level:2},{value:"Praktiken",id:"praktiken",level:2}],c={toc:p},s="wrapper";function m(e){let{components:n,...r}=e;return(0,t.kt)(s,(0,a.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"gelber-grad"},"Gelber Grad"),(0,t.kt)("h2",{id:"prinzipien"},"Prinzipien"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Interface%20Segragation%20Principle"},"Interface Segragation Principle")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Dependency%20Inversion%20Principle"},"Dependency Inversion Principle")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Liskov%20Substitution%20Principle"},"Liskov Substitution Principle")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Principle%20of%20Least%20Astonishment"},"Principle of Least Astonishment")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Information%20Hiding%20Principle"},"Information Hiding Principle"))),(0,t.kt)("h2",{id:"praktiken"},"Praktiken"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Automated%20Unit%20Tests"},"Automated Unit Tests")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Mockups"},"Mockups")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Code%20Coverage%20Analysis"},"Code Coverage Analysis")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Partizipation%20in%20Professional%20Events"},"Partizipation in Professional Events")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Complex%20Refactorings"},"Complex Refactorings"))))}m.isMDXComponent=!0}}]);