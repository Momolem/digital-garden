"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6631],{4137:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>f});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(r),m=o,f=s["".concat(c,".").concat(m)]||s[m]||u[m]||a;return r?t.createElement(f,i(i({ref:n},d),{},{components:r})):t.createElement(f,i({ref:n},d))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7576:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var t=r(7462),o=(r(7294),r(4137));const a={title:"DRY",tags:["cleancode/ccd/principle","cleancode/ccd","cleancode"]},i="Don\u2019t Repeat Yourself (DRY)",l={unversionedId:"main/CleanCode/CleanCodeDeveloper/Prinzipien/DRY",id:"main/CleanCode/CleanCodeDeveloper/Prinzipien/DRY",title:"DRY",description:"Warum?",source:"@site/docs/main/CleanCode/1. CleanCodeDeveloper/Prinzipien/DRY.md",sourceDirName:"main/CleanCode/1. CleanCodeDeveloper/Prinzipien",slug:"/main/CleanCode/CleanCodeDeveloper/Prinzipien/DRY",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/DRY",draft:!1,tags:[{label:"cleancode/ccd/principle",permalink:"/docs/tags/cleancode-ccd-principle"},{label:"cleancode/ccd",permalink:"/docs/tags/cleancode-ccd"},{label:"cleancode",permalink:"/docs/tags/cleancode"}],version:"current",frontMatter:{title:"DRY",tags:["cleancode/ccd/principle","cleancode/ccd","cleancode"]},sidebar:"main",previous:{title:"Beware of Premature Optimization",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Beware of Premature Optimization"},next:{title:"Dependency Inversion Principle",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Dependency Inversion Principle"}},c={},p=[],d={toc:p},s="wrapper";function u(e){let{components:n,...r}=e;return(0,o.kt)(s,(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dont-repeat-yourself-dry"},"Don\u2019t Repeat Yourself (DRY)"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Warum?"),"\nJede Doppelung von Code oder Handgriffen leistet Inkonsistenzen und Fehlern Vorschub.")),(0,o.kt)("p",null,"Das DRY-Prinzip lautet:\xa0",(0,o.kt)("em",{parentName:"p"},"Don\u2019t Repeat Yourself"),"\xa0\u2013 Wiederhole dich nicht. Es gilt seit den Anf\xe4ngen der Softwareentwicklung \u2013 sonst g\xe4be es keine Unterprogramme und keine Datennormalisierung. Dennoch ist es wahrscheinlich das am meisten missachtete Prinzip. Denn nichts ist einfacher, als Code durch Copy&Paste zu wiederholen. Gerade dann, wenn es mal schnell gehen soll, passiert das allzuoft."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/main/CleanCode/CleanCodeDeveloper/CleanCodeDeveloper"},"1. CleanCodeDeveloper")," \xfcben sich im roten Grad daher darin, dieses Prinzip stets zu beachten. Sie sind sich bewusst, wann sie Code oder andere Artefakte wiederholen. Sie erkennen solche Wiederholungen, die sie selbst oder andere erzeugt haben. Sie bereinigen Wiederholungen durch Refaktorisierungen \u2013 wenn keine anderen Prinzipien oder Beschr\xe4nkungen dagegen sprechen."))}u.isMDXComponent=!0}}]);