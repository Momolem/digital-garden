"use strict";(self.webpackChunkknowledgebase=self.webpackChunkknowledgebase||[]).push([[2772],{16600:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var r=i(85893),o=i(11151);const t={title:"SOLID"},l="SOLID",a={id:"main/CleanCode/SOLID",title:"SOLID",description:"The SOLID Principles are a part of the CleanCode Principles. The letters stand for:",source:"@site/docs/main/CleanCode/SOLID.md",sourceDirName:"main/CleanCode",slug:"/main/CleanCode/SOLID",permalink:"/docs/main/CleanCode/SOLID",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SOLID"},sidebar:"cs",previous:{title:"Robert C. Martin",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Robert C. Martin"},next:{title:"Abbruch und R\xfcckg\xe4ngigmachen von Aktionen",permalink:"/docs/main/UI & UX/Interaktive Systeme/Entwurfsprinzipien/Abbruch und R\xfcckg\xe4ngigmachen von Aktionen"}},s={},c=[];function d(e){const n={a:"a",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"#cleancode"}),"\n",(0,r.jsx)(n.h1,{id:"solid",children:"SOLID"}),"\n",(0,r.jsxs)(n.p,{children:["The SOLID Principles are a part of the ",(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCode",children:"CleanCode"})," Principles. The letters stand for:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Single%20Responsibility%20Principle",children:"Single Responsibility Principle"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Open%20Closed%20Principle",children:"Open Closed Principle"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Liskov%20Substitution%20Principle",children:"Liskov Substitution Principle"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Interface%20Segragation%20Principle",children:"Interface Segragation Principle"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Dependency%20Inversion%20Principle",children:"Dependency Inversion Principle"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>l});var r=i(67294);const o={},t=r.createContext(o);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);