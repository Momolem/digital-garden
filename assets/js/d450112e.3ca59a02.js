"use strict";(self.webpackChunkknowledgebase=self.webpackChunkknowledgebase||[]).push([[2521],{94312:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=t(85893),r=t(11151);const s={title:"Design before Implementation",aliases:null,tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},a="Design before Implementation",o={id:"main/CleanCode/CleanCodeDeveloper/Praktiken/Design before Implementation",title:"Design before Implementation",description:"Warum?",source:"@site/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Design before Implementation.md",sourceDirName:"main/CleanCode/CleanCodeDeveloper/Praktiken",slug:"/main/CleanCode/CleanCodeDeveloper/Praktiken/Design before Implementation",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Design before Implementation",draft:!1,unlisted:!1,tags:[{label:"cleancode",permalink:"/docs/tags/cleancode"},{label:"cleancode/ccd",permalink:"/docs/tags/cleancode-ccd"},{label:"cleancode/ccd/practic",permalink:"/docs/tags/cleancode-ccd-practic"}],version:"current",frontMatter:{title:"Design before Implementation",aliases:null,tags:["cleancode","cleancode/ccd","cleancode/ccd/practic"]},sidebar:"cs",previous:{title:"Daily Reflection",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Daily Reflection"},next:{title:"Error Measurement",permalink:"/docs/main/CleanCode/CleanCodeDeveloper/Praktiken/Error Measurement"}},c={},l=[];function d(e){const n={a:"a",blockquote:"blockquote",em:"em",h1:"h1",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"design-before-implementation",children:"Design before Implementation"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Warum?"}),"\nVor der Umsetzung muss eine L\xf6sung entworfen werden. Andernfalls findet kein konsequentes Nachdenken \xfcber die L\xf6sung statt."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Die Aufgabe eines Entwicklers besteht darin, Anforderungen in Code zu \xfcbersetzen. Dazu ist es erforderlich, eine L\xf6sung f\xfcr die Anforderungen zu entwickeln. Es muss nachgedacht werden. Wie kann das aber auf gute Weise geschehen, wenn Entwickler direkt ins Codieren springen?"}),"\n",(0,i.jsxs)(n.p,{children:["In trivialen F\xe4llen mag es m\xf6glich sein, direkt Code zu schreiben. Dennoch wird auch beim unmittelbaren Sprung ins Codieren \xfcber die L\xf6sung nachgedacht. Allerdings geschieht dies eher unbewusst, vor allem aber\xa0",(0,i.jsx)(n.em,{children:"w\xe4hrend"}),"\xa0der Umsetzung. Der Entwickler denkt ein wenig nach, codiert, denk nach, codiert, usw. Es fehlt hier ein konsequentes Durchdenken der L\xf6sung, getrennt von der Umsetzung."]}),"\n",(0,i.jsx)(n.p,{children:"Sp\xe4testens, wenn eine Gruppe von Entwicklern gemeinsam als Team arbeiten m\xf6chte, muss der Entwurf zeitlich getrennt von der Umsetzung stattfinden. Andernfalls ist keine fl\xfcssige arbeitsteilige Vorgehensweise m\xf6glich."}),"\n",(0,i.jsxs)(n.p,{children:["Der Entwurf erm\xf6glicht es dem Team bzw. einem einzelnen Entwickler, bereits vor der Codierung \xfcber wichtige Prinzipien nachzudenken. Es entstehen bspw. erst gar keine Methoden oder Klassen mit mehreren Verantwortlichkeiten, da schon auf der Ebene des Entwurfs \xfcber das\xa0",(0,i.jsx)(n.a,{href:"/docs/main/CleanCode/CleanCodeDeveloper/Prinzipien/Single%20Responsibility%20Principle",children:"Single Responsibility Principle"}),"\xa0nachgedacht werden kann. Damit erspart sich das Team den Refaktorisierungsaufwand der entsteht, wenn \u201edrauf los\u201c codiert wird."]}),"\n",(0,i.jsxs)(n.p,{children:["Siehe auch\xa0",(0,i.jsx)(n.a,{href:"https://flow-design.info/"}),(0,i.jsx)(n.a,{href:"https://flow-design.info",children:"https://flow-design.info"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var i=t(67294);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);